<MudCard Elevation="3">
    <MudCardHeader Class="border-b-2 border-solid" Style="padding: 8px 8px; border-color: var(--mud-palette-divider)">
        <MudItem md="2" xs="3">
            <MudStack Justify="Justify.FlexStart" Row StretchItems="StretchItems.End">
                <MudIcon Icon="@Icons.Material.Rounded.CalendarToday" Size="Size.Small" />
                <MudText>
                    @PaymentsDay.Date.ToShortDateString()
                </MudText>
            </MudStack>
        </MudItem>

        <MudItem md="2" xs="3">
            <PaymentDialog @ref="_dialog"
                           Payment="@(new Payment { Date = PaymentsDay.Date, Category = Category.Empty })"
                           OnSubmit="PaymentsDay.Payments.Add">
                <MudStack AlignItems="AlignItems.Center" Row>
                    @foreach (PaymentTypes.Value type in PaymentTypes)
                    {
                        <MudTooltip Text="@type.AddText">
                            <MudIconButton Color="type.Color"
                                           Disabled="@(_dialog.IsOpen)"
                                           Icon="@Icons.Material.Rounded.Add"
                                           OnClick="() => _dialog.ToggleOpen(type)"
                                           Size="Size.Small" />
                        </MudTooltip>
                    }
                    <MudTooltip Text="Быстрое добавление">
                        <MudIconButton Color="Color.Info"
                                       Disabled="@(_dialog.IsOpen)"
                                       Icon="@Icons.Material.Rounded.Add"
                                       OnClick="() => _dialog.ToggleOpen()"
                                       Size="Size.Small" />
                    </MudTooltip>
                </MudStack>
            </PaymentDialog>
        </MudItem>

        @foreach (PaymentTypes.Value paymentType in PaymentTypes)
        {
            <MudItem md="2" xs="3">
                <MudStack AlignItems="AlignItems.Center" Justify="Justify.FlexEnd" Row StretchItems="StretchItems.End">
                    <MudIcon Color="@paymentType.Color" Icon="@paymentType.Icon" Size="Size.Small" />
                    <MudText>
                        @PaymentsDay.CalculateSum(paymentType).ToString("N0")
                    </MudText>
                </MudStack>
            </MudItem>
        }

        <MudSpacer />
    </MudCardHeader>
    <MudCardContent Style="padding: 8px 8px;">
        <MudStack Spacing="0">
            @for (int i = 0; i < PaymentsDay.Payments.Count; i++)
            {
                Payment payment = PaymentsDay.Payments[i];

                if (payment.IsDeleted)
                {
                    <MudStack AlignItems="AlignItems.Center" Row>
                        <MudText Style="text-decoration: line-through;">
                            @payment.Sum.ToString("N0") - @payment.Category.Name - @payment.Comment
                        </MudText>
                        <MudSpacer />
                        <MudButton Color="Color.Info" EndIcon="@Icons.Material.TwoTone.Cancel" OnClick="() => OnRestore.InvokeAsync(payment)">
                            Восстановить
                        </MudButton>
                    </MudStack>
                }
                else
                {
                    <PaymentItem OnDelete="() => OnDelete.InvokeAsync(payment)"
                                 OnEdit="() => StateHasChanged()"
                                 Payment="@payment" />

                    if (Settings.ShowDividers && i != PaymentsDay.Payments.Count - 1)
                    {
                        <MudDivider FlexItem DividerType="DividerType.FullWidth" />
                    }
                }
            }
        </MudStack>
    </MudCardContent>
</MudCard>
