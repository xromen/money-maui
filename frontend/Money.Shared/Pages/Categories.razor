@page "/categories"
@attribute [Authorize]

<PageTitle>Категории</PageTitle>

<MudText GutterBottom Typo="Typo.h3">Категории</MudText>

@if (_init == false)
{
    <MudStack AlignItems="AlignItems.Center" Row>
        <MudProgressCircular Indeterminate />
        <MudText Typo="Typo.body1">Загрузка..</MudText>
    </MudStack>

    return;
}

<MudTabs Elevation="4" Color="@Color.Primary">
    @foreach (PaymentTypes.Value paymentType in PaymentTypes.Values)
    {
        <MudTabPanel Text="@paymentType.Name" ID='@paymentType.Id'>
            <MudTreeView ExpandOnClick Hover Items="@InitialTreeItems[paymentType.Id]" ReadOnly Ripple>
                <ItemTemplate>
                    @{
                        Category category = context.Value!;
                        List<TreeItemData<Category?>> children = context.Children?.OfType<TreeItemData<Category?>>().ToList() ?? [];
                    }
                    <MudStack Row StretchItems="StretchItems.Start">
                        <MudTreeViewItem @bind-Expanded="@context.Expanded" Items="@children" Value="@context.Value" Disabled="category.IsDeleted">
                            <Content>
                                <MudTreeViewItemToggleButton @bind-Expanded="@context.Expanded" Visible="@context.HasChildren" />
                                <MudText>@category.Name</MudText>
                                <MudSpacer />
                                @if (category is { Color: not null, IsDeleted: false })
                                {
                                    <div class="chip" style="background-color: @category.Color"></div>
                                }

                                @if (category.IsDeleted == false)
                                {
                                    <MudIconButton Color="Color.Success"
                                                   Icon="@Icons.Material.TwoTone.Add"
                                                   OnClick="() => Create(paymentType, category.Id)" />

                                    <MudIconButton Color="Color.Warning"
                                                   Icon="@Icons.Material.TwoTone.Edit"
                                                   OnClick="() => Update(category)" />

                                    <MudIconButton Color="Color.Error"
                                                   Icon="@Icons.Material.TwoTone.Delete"
                                                   OnClick="() => Delete(category)" />
                                }
                            </Content>
                        </MudTreeViewItem>

                        @if (category.IsDeleted)
                        {
                            <MudSpacer />

                            <MudButton Color="Color.Info"
                                       EndIcon="@Icons.Material.Sharp.Cancel"
                                       OnClick="() => Restore(category)"
                                       Size="Size.Large">
                                Восстановить
                            </MudButton>
                        }
                    </MudStack>
                </ItemTemplate>
            </MudTreeView>
            <MudButton EndIcon="@Icons.Material.TwoTone.Add"
                       OnClick="() => Create(paymentType, null)"
                       Variant="Variant.Filled">
                Создать
            </MudButton>
        </MudTabPanel>
    }
</MudTabs>
